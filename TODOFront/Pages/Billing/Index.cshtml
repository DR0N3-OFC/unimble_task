@page
@using System.Text.RegularExpressions;
@model TODOFront.Pages.Billing.IndexModel

<style>
    body {
        background-color: #e9ecef;
    }

    .wrapper {
        margin: 10vh auto;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-container {
        min-width: 600px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-container h2 {
        text-align: center;
    }

    .form-container .form-group {
        margin-bottom: 20px;
    }

    .form-container label {
        font-weight: bold;
    }

    .details-container {
        width: 80%;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .details-container .details {
            margin-bottom: 20px;
        }

    .qr-code {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .qr-code img {
        width: 200px;
        height: auto;
    }

    .details-container p {
        margin: 20px;
    }
</style>

<div class="wrapper">
    @if(Model.Billing?.TxID != null)
    {
        <div class="details-container">
            <h2 class="text-center">Gostou do Unimble Task?</h2>
            <p class="text-center">Conclua a operação de assinatura e adicione quantas tarefas quiser por apenas R$0,01.</p>

            <h4 class="text-center">Detalhes da Cobrança PIX</h4>

            <div class="details">
                <strong>Nome:</strong> @Model.Billing.FullName<br>
                <strong>CPF:</strong> @Regex.Replace(Model.Billing.CPF!, @"(\d{3})(\d{3})(\d{3})(\d{2})", "$1.$2.$3-$4")<br>
                <strong>Valor:</strong> R$@Model.Billing.Value<br>
                <strong>Validade:</strong> @Model.Billing.Deadline?.ToString("dd/MM/yyyy HH:mm")<br>
            </div>

            <div class="qr-code">
                <img src="@Model.QRCode" alt="QR Code PIX">
            </div>
        </div>
    }
    else
    {
        <div class="form-container">
            <h2>Gostou do Unimble Task?</h2>
            <p class="text-center">Pague apenas R$0,01 para continuar usando sem restrições.</p>
            <hr>
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Billing!.FullName">Nome completo:</label>
                    <input asp-for="Billing!.FullName" type="text" class="form-control" onkeyup="handleText(event)">
                    <span asp-validation-for="Billing!.FullName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Billing!.CPF">CPF:</label>
                    <input asp-for="Billing!.CPF" type="text" class="form-control" oninput="handleCPFTyping(event)" maxlength="14" />
                    <span asp-validation-for="Billing!.CPF" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary btn-block" value="Cadastrar" />
                    <a asp-page="/Index" class="btn btn-secondary btn-block">Cancelar</a>
                </div>
            </form>
        </div>
    }
</div>

<script>
    const lettersOnly = (value) => {
		const regex = /^[a-zA-ZÀ-ú\s'-]*$/;
		return regex.test(value) && !/\d/.test(value);
	}
	const handleText = (event) => {
		let input = event.target;
		let value = input.value;
		if (!lettersOnly(value)) {
			input.value = value.slice(0, -1);
		}
	}

    function handleCPFTyping(event) {
        let input = event.target;
        let cpf = input.value.replace(/\D/g, '');

        // Verifica se o CPF tem até 11 dígitos
        if (cpf.length <= 11) {
            cpf = cpf.replace(/(\d{3})(\d{0,3})(\d{0,3})(\d{0,2})/, function (match, p1, p2, p3, p4) {
                var parts = [p1, p2, p3];
                parts = parts.filter(function (part) { return part !== '' });
                return parts.join('.') + (p4 ? '-' + p4 : '');
            });

            input.value = cpf;
        }
    }
</script>